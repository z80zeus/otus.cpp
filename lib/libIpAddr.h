/**
 * @file Интерфейс библиотеки работы с ip-адресами из самостоятельной работы otus.c++.1.2.
 * @author Владимир Лазарев solock@mail.ru
 */
#pragma once

#include <iostream>
#include <vector>

/**
 * @brief Количество байт в IP-адресе. Используется кое-где в алгоритмах.
 */
constexpr int bytesInAddr = 4;

/**
 * @brief Структура IP-адреса - это вектор байт и соответствующее ему целочисленное значение.
 * @struct
 */
struct ipAddr {
  uint32_t addr = 0;                /** Числовое представление адреса. Для более эффективного оператора сравнения. */
  uint8_t bytes[bytesInAddr] = {0}; /** По-байтовое представление адреса. */
};

/**
 * @brief Преобразование строкового представления адреса в структуру ipAddr.
 * @param buffer Строковое представление IP-адреса ([0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3})
 * @return Сформированная структура ipAddr, соответствующая строке buffer.
 * @throw В случае ошибки преобразования - выбрасывает исключение std::invalid_argument.
 */
ipAddr string2ip(const std::string &buffer) noexcept(false);

/**
 * @brief Оператор вывода цифрового (текстового) представления IP-адреса в поток.
 * @param os Поток вывода, куда выводится адрес.
 * @param ip Выводимый объект.
 * @return Как положено потоковым операторам - возвращает поток, для которого был вызван.
 * @throw Сам исключения не бросает, но не перехватывает исключения нижележащего кода.
 */
std::ostream &operator<<(std::ostream &os, const ipAddr &ip) noexcept(false);

/**
 * @brief Оператор ввода массива IP-адресов из потока. По одному IP-адресу из строки. Остаток строки - игнорируется!
 * @param is Поток ввода, из которого производится чтение IP-адреса.
 * @param ips Вектор, куда оператор сохраняет прочитанные IP-адреса
 * @return Как положено потоковым операторам - возвращает поток, для которого был вызван.
 * @throw Сам исключения не бросает, но не перехватывает исключения нижележащего кода.
 */
std::istream &operator>>(std::istream &is, std::vector<ipAddr> &ips) noexcept(false);

/**
 * @brief Оператор вывода массива IP-адресов в поток. По одному IP-адресу на строку.
 * @param os Поток вывода куда выводится массив.
 * @param ips Вектор адреса из которого выводятся в поток.
 * @return Как положено потоковым операторам - возвращает поток, для которого был вызван.
 * @throw Сам исключения не бросает, но не перехватывает исключения нижележащего кода.
 */
std::ostream &operator<<(std::ostream &os, const std::vector<ipAddr> &ips) noexcept(false);

/**
 * @brief Оператор сравенения IP-адресов.
 * @param left Левый операнд.
 * @param right Правый операнд.
 * @return Возаращет true тогда и только тогда, когда левый операнд строго больше правого.
 * В противном случае - возвращает false.
 */
bool operator>(const ipAddr &left, const ipAddr &right) noexcept;
